1) How much faster was the by-row access of the rectangular array than the by-column when your array fits in L1 cache? (Compare the worst case of each.)
My machine with a AMD Ryzen 9 7950X3D 16-Core Processor had an L1 cache (for both instruction and data) in 512 KiB.


2) How does the performance of the by-column summation change as the array gets larger than the caches?


3) Your experience likely matches mine: for large arrays, the by-column summation of an array with a small height (â‰ˆsingle-digits) is consistently slower than a small width. Why do you think that is?


4) Did avoiding the branch with a conditional move speed up the hailstone length calculation? By how much? How did the C code compare? [I believe this is a very rare case where our assembly can slightly beat gcc -O3. Sadly, clang -O3 still beats my times.]

