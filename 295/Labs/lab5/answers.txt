# By Randy Panopio
# ID: 301294517
# rpanopio@sfu.ca 

1) What was your test setup (i.e. what CPU model/generation did you test with? Desktop or laptop or other?)
I tested my code using WSL-Ubuntu with an AMD Ryzen 9 7950X3D 16-Core Processor, with a reported BogoMIPS of 8399.78. I also tested on the CSIL machines with an Intel(R) Xeon(R) Gold 5220R CPU @ 2.20GHz Processor.

2) What were your results: how much faster (likely expressed as a fraction/percent) is each #2 implementation? (There is no exact answer here: results will vary by run, but give your best estimate of the "truth".)
WSL AMD 7950X3D Results:
polynomial2 ran with a 53.2% difference, running faster than polynomial1 (218.7 ms vs 377.1 ms)
is_odd2 ran with a 47.3% difference, running faster than is_odd1 (361.0 ms vs 584.5 ms)
mul2 ran with a 17.2% difference, running faster than mul1 (179.5 ms vs 213.3 ms)

CSIL - Intel(R) Xeon(R) Gold 5220R CPU @ 2.20GHz Results:
polynomial2 ran with a 21.0% difference, running faster than polynomial1 (367.0 ms vs 453.3 ms)
is_odd2 ran with a 146.7% difference, running faster than is_odd1 (631.5 ms vs 4109.9 ms)
mul2 ran with a 1% difference, running identical (slightly slower) to mul1 (322.1 ms vs 318.9 ms)

3) In each case, the C implementation (#3) was described with the "slow" algorithm. How did they compare to the "fast" algorithm after the optimizer processed them?
WSL - AMD 7950X3D Results:
polynomial3 ran with a 46.3% difference, running faster than polynomial1 (235.3 ms vs 377.1 ms)
is_odd3 ran with a 47.8% difference, running faster than is_odd1 (359.1 ms vs 584.5 ms)
mul3 ran with a 16.7% difference, running faster than mul1 (180.5 ms vs 213.3 ms)

CSIL - Intel(R) Xeon(R) Gold 5220R CPU @ 2.20GHz Results:
polynomial3 ran with a 11.3% difference, running faster than polynomial1 (405.0 ms vs 453.3 ms)
is_odd3 ran with a 147.7% difference, running faster than is_odd1 (618.7 ms vs 4109.9 ms)
mul3 ran with a 5% difference, running faster than mul1 (303.4 ms vs 318.9 ms)

[optional] Do you see any pattern to when mul1 is faster/slower than mul2 on different processors/computers/whatever? Feel free to share timing results (but not solutions) with others in the course if it helps form a pattern.
My AMD Processor was able to run mul2 faster than mul1 with a meaningful difference of 17.2%, however with the CSIL Xeon processors, mul2 ran (nearly within margin of error) a single percent slower than mul1.


Below is a sample of some of my results:
WSL - AMD Ryzen 9 7950X3D, BogoMIPS: 8399.78  
              warmup(1) calculated          400000000 in     0.0 ms                              
              warmup(2) calculated         1000000000 in     0.0 ms                              
              warmup(3) calculated         2000000000 in     0.0 ms                              
              warmup(4) calculated         3400000000 in     0.0 ms
              warmup(5) calculated         5200000000 in     0.0 ms
polynomial1(3,2,7,-1,2) calculated        23200000000 in   377.1 ms
polynomial2(3,2,7,-1,2) calculated        23200000000 in   218.7 ms
polynomial3(3,2,7,-1,2) calculated        23200000000 in   235.3 ms
is_odd1(7) + is_odd1(8) calculated          200000000 in   584.5 ms
is_odd2(7) + is_odd2(8) calculated          200000000 in   361.0 ms
is_odd3(7) + is_odd3(8) calculated          200000000 in   359.1 ms
              mul1(123) calculated   1612210200000000 in   179.5 ms
              mul2(123) calculated   1612210200000000 in   213.1 ms
              mul3(123) calculated   1612210200000000 in   179.4 ms

RUN 2
CSIL CPI - Intel(R) Xeon(R) Gold 5220R CPU @ 2.20GHz,  BogoMIPS: 4389.68
              warmup(1) calculated          400000000 in     0.0 ms
              warmup(2) calculated         1000000000 in     0.0 ms
              warmup(3) calculated         2000000000 in     0.0 ms
              warmup(4) calculated         3400000000 in     0.0 ms
              warmup(5) calculated         5200000000 in     0.0 ms
polynomial1(3,2,7,-1,2) calculated        23200000000 in   453.3 ms
polynomial2(3,2,7,-1,2) calculated        23200000000 in   367.0 ms
polynomial3(3,2,7,-1,2) calculated        23200000000 in   405.0 ms
is_odd1(7) + is_odd1(8) calculated          200000000 in  4109.9 ms
is_odd2(7) + is_odd2(8) calculated          200000000 in   631.5 ms
is_odd3(7) + is_odd3(8) calculated          200000000 in   618.7 ms
              mul1(123) calculated   1612210200000000 in   318.9 ms
              mul2(123) calculated   1612210200000000 in   322.1 ms
              mul3(123) calculated   1612210200000000 in   303.4 ms